name: auto-deploy

on: [push]

jobs:
  autodeploy:
    runs-on: ubuntu-latest
#    env:
#      FLY_API_TOKEN: ${{ secrets.FLY_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Fly.io registry
        run: echo "${{ secrets.FLY_TOKEN }}" | docker login registry.fly.io -u x --password-stdin

#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.CR_PAT }}

      - name: Install pack CLI via the official buildpack Action https://github.com/buildpacks/github-actions#setup-pack-cli-action
        uses: buildpacks/github-actions/setup-pack@v5.0.0

      # TODO: Create a buildpack to do all the preparation steps. See https://buildpacks.io/docs/buildpack-author-guide/.
      - name: Just to prepare an empty file for Gradle build to satisfy Android Gradle plugin..
        run: |
          touch local.properties

      - name: Add a "version" property so the native application display its version properly.
        run: |
          echo >> webapp/src/main/resources/application.properties
          echo "version=1.1.1" >> webapp/src/main/resources/application.properties

      # Caching Paketo Build see https://stackoverflow.com/a/66598693/4964553
      # BP_OCI_SOURCE as --env creates the GitHub Container Registry <-> Repository link (https://paketo.io/docs/buildpacks/configuration/#applying-custom-labels)
      # BP_JVM_VERSION 17, because we use Java 17 inside our Gradle build but Paketo defaults to 11
      # Explicitly defining the java-native-image buildpack as described here https://paketo.io/docs/howto/java/#configure-the-graalvm-version to pin the GraalVM version (5.12.0 = GraalVM 21.3)
      # Files specifies within BP_NATIVE_IMAGE_BUILD_ARGUMENTS have to be absolute path related to the workspace - they have to be prefixed with "/workspace/"
      # https://github.com/paketo-buildpacks/java-native-image
      # WIP #1: Possible native build arguments: -H:JNIConfigurationFiles=/workspace/webapp/src/graalvm/config/v1.1.1/jni-config.json -H:DynamicProxyConfigurationFiles=/workspace/webapp/src/graalvm/config/v1.1.1/proxy-config.json
      - name: Build app with pack CLI & publish to GitHub Container Registry
        run: |
          pack build registry.fly.io/gcunicorn:v1.1.1 \
            --builder paketobuildpacks/builder:tiny \
            --buildpack paketo-buildpacks/java-native-image@8.7.1 \
            --path . \
            --env "BP_JVM_VERSION=17" \
            --env "BP_GRADLE_BUILD_ARGUMENTS=--no-daemon :webapp:bootJar" \
            --env "BP_GRADLE_BUILT_ARTIFACT=webapp/build/libs/*.jar" \
            --env "BP_INCLUDE_FILES=webapp/src/graalvm/config/v1.1.1/*.json" \
            --env "BP_NATIVE_IMAGE=true" \
            --env "BP_NATIVE_IMAGE_BUILD_ARGUMENTS=--initialize-at-build-time=kotlin.DeprecationLevel -H:+ReportExceptionStackTraces -H:ReflectionConfigurationFiles=/workspace/webapp/src/graalvm/config/v1.1.1/reflect-config.json -H:ResourceConfigurationFiles=/workspace/webapp/src/graalvm/config/v1.1.1/resource-config.json" \
            --publish
      - name: Install flyctl via https://github.com/superfly/flyctl-actions
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy our Spring Boot app to fly.io
        run: flyctl deploy --image registry.fly.io/gcunicorn:v1.1.1