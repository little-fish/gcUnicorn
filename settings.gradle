/*
 * gcUnicorn
 * Copyright (c) 2024 Martin Misiarz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

pluginManagement {
    repositories {
        gradlePluginPortal()
        google()
    }
}

plugins {
    // https://github.com/gradle/foojay-toolchains
    id('org.gradle.toolchains.foojay-resolver') version('0.8.0')
}

toolchainManagement {
    jvm {
        javaRepositories {
            repository('foojay') {
                resolverClass = org.gradle.toolchains.foojay.FoojayToolchainResolver
            }
        }
    }
}

rootProject.name = 'gcUnicorn'

include 'core'
include 'webapp'
include 'android'

dependencyResolutionManagement {
    repositories {
        mavenCentral()
        google()
        maven { url = 'https://jitpack.io' }
    }

    versionCatalogs {
        libs {
            version('kotlin', '2.1.21')
            version('kotlinx-coroutines', '1.10.2')
            version('kotlinx-serialization', '1.8.1')
            version('spring-boot', '3.5.4')
            version('spring-mobile-device', '2.0.0.M3')
            version('redundent', '1.9.3')
            version('okhttp', '4.12.0')
            // https://developer.android.com/build/releases/gradle-plugin
            // https://developer.android.com/studio/releases#android_gradle_plugin_and_android_studio_compatibility
            // Personally, I am using IntelliJ IDEA and the latest version available doesn't support the latest version of Android Gradle Plugin..
            version('android-application', '8.10.1')
            version('android-secrets', '2.0.1')
            version('androidx-preference', '1.2.1')
            version('androidx-constraintlayout', '2.2.1')
            version('androidx-appcompat', '1.7.1')
            version('androidx-legacy', '1.0.0')
            version('androidx-multidex', '2.0.1')
            version('android-material', '1.12.0')
            version('android-places', '4.3.1')
            version('android-play-services-maps', '19.2.0')
            version('dagger', '2.56.2')
            version('suchox-placepicker', '1.1.2')
            version('locus', '0.9.64')
            version('logback-android', '3.0.0')
            version('graalvm-native', '0.10.6')

            // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies
            library('spring-boot-dependencies', 'org.springframework.boot', 'spring-boot-dependencies').versionRef('spring-boot')
            library('spring-boot-autoconfigure', 'org.springframework.boot', 'spring-boot-autoconfigure').withoutVersion()
            library('spring-security-config', 'org.springframework.security', 'spring-security-config').withoutVersion()
            library('spring-security-web', 'org.springframework.security', 'spring-security-web').withoutVersion()
            library('spring-webmvc', 'org.springframework', 'spring-webmvc').withoutVersion()
            library('spring-websocket', 'org.springframework', 'spring-websocket').withoutVersion()
            library('spring-messaging', 'org.springframework', 'spring-messaging').withoutVersion()
            library('tomcat-embed-el', 'org.apache.tomcat.embed', 'tomcat-embed-el').withoutVersion()
            library('thymeleaf-spring6', 'org.thymeleaf', 'thymeleaf-spring6').withoutVersion()
            library('undertow-websockets-jsr', 'io.undertow', 'undertow-websockets-jsr').withoutVersion()
            library('jackson-module-kotlin', 'com.fasterxml.jackson.module', 'jackson-module-kotlin').withoutVersion()
            library('reactive-streams', 'org.reactivestreams', 'reactive-streams').withoutVersion()
            library('slf4j-api', 'org.slf4j', 'slf4j-api').withoutVersion()
            library('logback-classic', 'ch.qos.logback', 'logback-classic').withoutVersion()

            library('kotlinx-coroutines-core', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-core').versionRef('kotlinx-coroutines')
            library('kotlinx-coroutines-reactor', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-reactor').versionRef('kotlinx-coroutines')
            library('kotlinx-coroutines-android', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-android').versionRef('kotlinx-coroutines')
            library('kotlinx-serialization-json', 'org.jetbrains.kotlinx', 'kotlinx-serialization-json').versionRef('kotlinx-serialization')
            library('kotlin-xml-builder', 'org.redundent', 'kotlin-xml-builder').versionRef('redundent')
            library('okhttp', 'com.squareup.okhttp3', 'okhttp').versionRef('okhttp')
            library('dagger-compiler', 'com.google.dagger', 'dagger-compiler').versionRef('dagger')
            library('dagger', 'com.google.dagger', 'dagger').versionRef('dagger')
            library('androidx.preference', 'androidx.preference', 'preference').versionRef('androidx-preference')
            library('androidx.constraintlayout', 'androidx.constraintlayout', 'constraintlayout').versionRef('androidx-constraintlayout')
            library('androidx.appcompat', 'androidx.appcompat', 'appcompat').versionRef('androidx-appcompat')
            library('androidx.legacy-support-core-ui', 'androidx.legacy', 'legacy-support-core-ui').versionRef('androidx-legacy')
            library('androidx.multidex', 'androidx.multidex', 'multidex').versionRef('androidx-multidex')
            library('android.material', 'com.google.android.material', 'material').versionRef('android.material')
            library('android.places', 'com.google.android.libraries.places', 'places').versionRef('android-places')
            library('android.play-services-maps', 'com.google.android.gms', 'play-services-maps').versionRef('android-play-services-maps')
            library('suchox.placepicker', 'com.github.suchoX', 'PlacePicker').versionRef('suchox-placepicker')
            library('locus-api-android', 'com.asamm', 'locus-api-android').versionRef('locus')
            library('logback-android', 'com.github.tony19', 'logback-android').versionRef('logback-android')

            plugin('org.jetbrains.kotlin.jvm', 'org.jetbrains.kotlin.jvm').versionRef('kotlin')
            plugin('org.jetbrains.kotlin.plugin.spring', 'org.jetbrains.kotlin.plugin.spring').versionRef('kotlin')
            plugin('org.jetbrains.kotlin.plugin.serialization', 'org.jetbrains.kotlin.plugin.serialization').versionRef('kotlin')
            plugin('org-springframework-boot', 'org.springframework.boot').versionRef('spring-boot')
            plugin('com.android.application', 'com.android.application').versionRef('android-application')
            plugin('com.google.android.libraries.mapsplatform.secrets-gradle-plugin', 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin').versionRef('android-secrets')
            plugin('org.jetbrains.kotlin.android', 'org.jetbrains.kotlin.android').versionRef('kotlin')
            plugin('org.jetbrains.kotlin.kapt', 'org.jetbrains.kotlin.kapt').versionRef('kotlin')
            plugin('org.jetbrains.kotlin.plugin.parcelize', 'org.jetbrains.kotlin.plugin.parcelize').versionRef('kotlin')
            plugin('org.graalvm.buildtools.native', 'org.graalvm.buildtools.native').versionRef('graalvm-native')
        }
    }
}
