/*
 * gcUnicorn
 * Copyright (C) 2023  Martin Misiarz
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

plugins {
    // https://developer.android.com/build
    alias(libs.plugins.com.android.application)
    // https://github.com/google/secrets-gradle-plugin
    alias(libs.plugins.com.google.android.libraries.mapsplatform.secrets.gradle.plugin)
    alias(libs.plugins.org.jetbrains.kotlin.android)
    alias(libs.plugins.org.jetbrains.kotlin.kapt)
    alias(libs.plugins.org.jetbrains.kotlin.plugin.parcelize)
}

dependencies {
    implementation(
            project(':core'),
            libs.androidx.preference,
            libs.androidx.constraintlayout,
            libs.androidx.appcompat,
            libs.androidx.legacy.support.core.ui,
            libs.androidx.multidex,
            libs.android.material,
            libs.takisoft.preferencex,
            // https://github.com/suchoX/PlacePicker
            libs.suchox.placepicker,
            // https://developers.google.com/maps/documentation/places/android-sdk/config
            libs.android.places,
            libs.locus.api.android,
            libs.dagger,
    )

    runtimeOnly(
            libs.android.play.services.maps,
            libs.kotlinx.coroutines.android,
            // https://github.com/tony19/logback-android
            libs.logback.android
    )
    kapt(
            libs.dagger.compiler
    )
}

// https://developer.android.com/build#module-level
android {
    namespace 'cz.babi.gcunicorn.android'

    compileSdk 33

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId 'cz.babi.gcunicorn.android'

        minSdk 21
        targetSdk 33

        multiDexEnabled true

        versionCode 3
        versionName "${project.version}"

        vectorDrawables.useSupportLibrary = true

        resConfigs 'en', 'cs'
    }

    // https://kotlinlang.org/docs/gradle-configure-project.html#gradle-java-toolchains-support
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            crunchPngs false

            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFiles fileTree(dir: 'proguard-rules', include: '*.pro').getFiles() as File[]
        }

        dev {
            debuggable true

            crunchPngs false
        }
    }

    lintOptions {
        // Lint doesn't take extension function into consideration..
        abortOnError false

        checkReleaseBuilds true
    }
}

// Load keystore properties.
def keystoreProperties = new Properties()
def keystorePropertiesFile = file(keystoreFile)

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(keystorePropertiesFile.newDataInputStream())

    if (keystoreProperties['keyAlias'] && keystoreProperties['keyPassword'] && keystoreProperties['storeFile'] && keystoreProperties['storePassword']) {
        android {
            signingConfigs {
                release {
                    keyAlias keystoreProperties['keyAlias']
                    keyPassword keystoreProperties['keyPassword']
                    storeFile file(keystoreProperties['storeFile'])
                    storePassword keystoreProperties['storePassword']
                }
            }

            buildTypes {
                release {
                    signingConfig signingConfigs.release
                }
            }
        }
    }
}
